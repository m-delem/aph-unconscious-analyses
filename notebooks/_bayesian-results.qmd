---
title: Bayesian Modelling results
subtitle: "Are there unconscious visual images in aphantasia? Development of an implicit priming paradigm"
format: html
---

```{r}
#| label: setup
#| include: false

library(here)
source(here("scripts/00-preprocessing.R"))
source(here("scripts/_bayesian-setup.R"))
```

:::: {.content-visible when-format="html"}
::: {.callout-note collapse="true"}
# Packages and setup
```r
{{< include ../scripts/_setup.R >}}
```
:::
::::

# Response Times analyses

## Model fitting

```{r}
#| label: model-fitting
#| code-fold: false
#| output: false

# Parallel processing variables -------------------------------------------

# detecting the number of cores to use
n_cores <- parallel::detectCores() - 4

# defining the number of iterations per chain (+ 1000 warm-up)
n_iter <- ceiling(40000 / n_cores) + 1000


options(cmdstanr_warn_inits = FALSE)


# Model formula -----------------------------------------------------------

formula <- bf(rt ~ aphantasia * congruence * color + (1 | subjectid))

# Priors ------------------------------------------------------------------

get_prior(formula, data = df_i_rt, family = shifted_lognormal())
# need to define better priors for the intercept, sigma, b, and sd

prior <- c(
  prior(normal(-1, 0.5), class = 'Intercept'),  # around exp(-1) = 0.36 secs
  prior(normal(0.4, 0.3), class = 'sigma'), # SD of individual rts in log-units
  prior(normal(0, 0.3), class = 'b'), # around exp(-1) - exp(-1 + 0.3) = 150 ms 
  prior(normal(0.3, 0.1), class = 'sd')  # some variability between participants
)

# Implicit task model -----------------------------------------------------

fit_implicit <- 
  brm(
    formula = formula,
    data = df_i_rt,
    family = shifted_lognormal(),
    prior = prior,
    sample_prior = TRUE,
    chains = n_cores,
    cores  = n_cores,
    iter   = n_iter,
    warmup = 1000,
    refresh = 5,
    backend = "cmdstanr",
    stan_model_args = list(stanc_options = list("O1")),
    save_pars = save_pars(all = TRUE),
    file = here("data/r-data-structures/brms-model-implicit.rds"),
    file_compress = "xz"
  )


# Explicit task model -----------------------------------------------------


fit_explicit <- 
  brm(
    formula = formula,
    data = df_e_rt,
    family = shifted_lognormal(),
    prior = prior,
    sample_prior = TRUE,
    chains = n_cores,
    cores  = n_cores,
    iter   = n_iter,
    warmup = 1000,
    refresh = 5,
    backend = "cmdstanr",
    stan_model_args = list(stanc_options = list("O1")),
    save_pars = save_pars(all = TRUE),
    file = here("data/r-data-structures/brms-model-explicit.rds"),
    file_compress = "xz"
  )
```

## Model diagnostics

```{r}
#| label: fig-ppc
#| fig-width: 10
#| fig-height: 5

custom_pp_check(fit_implicit)
custom_pp_check(fit_explicit)
```


## Model summaries

```{r}
#| label: summary

# Implicit task -----------------------------------------------------------
summary(fit_implicit) 
hypothesis(fit_implicit, "aphantasia1:congruence1 > 0") 
# BF+ = 312
1 / hypothesis(fit_implicit, "aphantasia1:congruence1 = 0")$hypothesis$Evid.Ratio 
# BF10 = 3.80

emmeans(
  fit_implicit, 
  c("aphantasia", "congruence"), 
  epred = TRUE) |>
  pairs() |> 
  summary(point.est = median)

# Explicit task -----------------------------------------------------------
summary(fit_explicit)
hypothesis(fit_explicit, "aphantasia1:congruence1 > 0") 
# BF+ = 1052
1 / hypothesis(fit_explicit, "aphantasia1:congruence1 = 0")$hypothesis$Evid.Ratio  
# BF10 = 7.36

emmeans(
  fit_explicit, 
  c("aphantasia", "congruence"), 
  epred = TRUE) |>
  pairs() |> 
  summary(point.est = median)
```


## Fixed effects

```{r}
#| label: fig-fixed
#| fig-width: 9
#| fig-height: 5

plot_fixed_effects(fit_implicit)
plot_fixed_effects(fit_explicit)
```


## Estimated means

```{r}
#| label: emmeans

emmeans_im <- 
  emmeans(fit_implicit, c("aphantasia", "congruence"), epred = TRUE) |> 
  summary(point.est = median) |> 
  as_tibble() |> 
  mutate(across(3:5, ~.*1000)) |>
  rename(median = emmean)

emmeans_im

emmeans_ex <- 
  emmeans(fit_explicit, c("aphantasia", "congruence"), epred = TRUE) |> 
  summary(point.est = median) |> 
  as_tibble() |> 
  mutate(across(3:5, ~.*1000)) |>
  rename(median = emmean)

emmeans_ex
```

## Visualisations

```{r}
#| label: fig-im
#| fig-width: 18
#| fig-height: 7

subj_means_im <-
  df_i_rt |> 
  group_by(subjectid, aphantasia, congruence) |>
  reframe(rt = mean(rt)*1000)

(
  plot_models_full_bayes(subj_means_im, emmeans_im, y_min = 400, y_max = 1110, size = 4) +
  plot_models_zoomed_bayes(subj_means_im, emmeans_im, size = 4) &
  theme(
    legend.position = "top",
    legend.title = element_blank(),
    legend.text = element_text(size = 20),
    legend.margin = margin(0, 150, 25, 0),
    axis.title.y = element_text(size = 20),
    axis.text.x = element_text(size = 18)
  )
) +
  plot_layout(
    guides = "collect",
    widths = c(1, 1.2)
  )
```

```{r}
#| label: fig-ex
#| fig-width: 18
#| fig-height: 7

subj_means_ex <-
  df_e_rt |> 
  group_by(subjectid, aphantasia, congruence) |>
  reframe(rt = mean(rt)*1000)

(
  plot_models_full_bayes(subj_means_ex, emmeans_ex, y_min = 350, y_max = 1450, size = 4) +
  plot_models_zoomed_bayes(subj_means_ex, emmeans_ex, size = 4) &
  theme(
    legend.position = "top",
    legend.title = element_blank(),
    legend.text = element_text(size = 20),
    legend.margin = margin(0, 150, 25, 0),
    axis.title.y = element_text(size = 20),
    axis.text.x = element_text(size = 18)
  )
) +
  plot_layout(
    guides = "collect",
    widths = c(1, 1.2)
  )
```


:::: {.content-visible when-format="html"}

&nbsp;
&nbsp;
&nbsp;

::: {.callout-note collapse="true"}
# Session information for reproducibility

```{r}
#| label: session-information
#| echo: false

cat("═════════════════════════════════════════════════════════════════════════")
report_system(session = sessionInfo())
cat("Packages used:")
report_packages(session = sessionInfo())
cat("═════════════════════════════════════════════════════════════════════════")
```
:::
::::


