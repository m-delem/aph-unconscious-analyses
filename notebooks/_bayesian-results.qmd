---
title: Bayesian Modelling results
subtitle: "Are there unconscious visual images in aphantasia? Development of an implicit priming paradigm"
---

```{r}
#| label: setup
#| include: false

library(here)
source(here("scripts/02-brms-models.R"))
```

:::: {.content-visible when-format="html"}
::: {.callout-note collapse="true"}
# Packages and setup
```r
{{< include ../scripts/_setup.R >}}
```
:::
::::

# Implicit task

## Summary

```{r}
#| label: summary-im

summary(fit_implicit) 
1 / hypothesis(fit_implicit, "aphantasia1:congruence1 = 0")$hypothesis$Evid.Ratio 
# BF10 = 1.46 with full model
# BF10 = 3.80 with intercept only
hypothesis(fit_implicit, "aphantasia1:congruence1 > 0") 
# BF+ = 110 with full model
# BF+ = 312 with intercept only

emmeans(
  fit_implicit, 
  c("aphantasia", "congruence"), 
  epred = TRUE) |>
  pairs() |> 
  summary(point.est = median)
```

## Model diagnostics

```{r}
#| label: fig-ppc-im
#| fig-width: 10
#| fig-height: 5

custom_pp_check(fit_implicit)
```

## Fixed effects

```{r}
#| label: fig-fixed-im
#| fig-width: 9
#| fig-height: 5

plot_fixed_effects(fit_implicit)
```

## Varying effects

```{r}
#| label: fig-varying-im
#| fig-width: 8
#| fig-height: 12
#| eval: false

plot_varying_effects(fit_implicit, df_i_rt)
```



## Estimated means

```{r}
#| label: emmeans-im

emmeans_im <- 
  emmeans(fit_implicit, c("aphantasia", "congruence"), epred = TRUE) |> 
  summary(point.est = median) |> 
  as_tibble() |> 
  mutate(across(3:5, ~.*1000)) |>
  rename(median = emmean)

emmeans_im
```

## Visualisations

```{r}
#| label: fig-im
#| fig-width: 9
#| fig-height: 6

subj_means_im <-
  df_i_rt |> 
  group_by(subjectid, aphantasia, congruence) |>
  reframe(rt = median(rt)*1000)

dw <- .4
alpha_subj <- .3
nudge <- .11

fig_im <-
  subj_means_im |> 
  ggplot(aes(x = congruence, y = rt, color = aphantasia, fill = aphantasia)) +
  # ggplot(aes(x = aphantasia, y = rt, color = congruence, fill = congruence)) +
  geom_violinhalf(
    trim = TRUE,
    flip = c(1, 2),
    alpha = .5,
    scale = "width",
    position = position_dodge(width = dw),
    show.legend = FALSE
  ) +
  # individual subject lines
  geom_line(
    data = subj_means_im |> filter(aphantasia == "Aphantasia"),
    aes(group = interaction(subjectid,aphantasia)),
    position = position_nudge(nudge),
    alpha = alpha_subj,
    show.legend = FALSE
  ) +
  geom_line(
    data = subj_means_im |> filter(aphantasia == "Control"),
    aes(group = interaction(subjectid, aphantasia)),
    position = position_nudge(-nudge),
    alpha = alpha_subj,
    show.legend = FALSE
  ) +
  # individual subject points
  geom_quasirandom(
    color = "white",
    pch = 21,
    width = .05,
    size = 1.8,
    alpha = .6,
    dodge.width = .4,
    show.legend = FALSE
  ) +
  # group median lines
  geom_line(
    data = emmeans_im,
    aes(y = median, group = aphantasia),
    position = position_dodge(width = dw),
    linewidth = 1,
    show.legend = FALSE
  ) +
  geom_errorbar(
    data = emmeans_im,
    aes(y = median, ymin = lower.HPD, ymax = upper.HPD),
    position = position_dodge(width = dw),
    width = 0,
    linewidth = 1,
    color = "black",
    show.legend = FALSE
  ) +
  geom_point2(
    data = emmeans_im,
    aes(y = median),
    position = position_dodge(width = dw),
    size = 4,
    shape = 21,
    stroke = 1,
    color = "black"
  ) +
  labs(x = NULL, fill = NULL) +
  scale_y_continuous(
    name = "Response time (ms)",
    breaks = breaks_pretty()
  ) +
  theme(
    axis.ticks.y = element_line(linewidth = 0.5),
    panel.grid.major.y = element_line(linewidth = 0.5, color = "grey90"),
    panel.grid.minor.y = element_line(linewidth = 0.5, color = "grey95")
  )

fig_im
```

```{r}
#| label: fig-im-zoom
#| fig-width: 9
#| fig-height: 5

fig_im_zoom <-
  subj_means_im |> 
  ggplot(aes(x = congruence, y = rt, color = aphantasia, fill = aphantasia)) +
  geom_line(
    data = emmeans_im,
    aes(y = median, group = aphantasia),
    position = position_dodge(width = .5),
    linewidth = 1.5,
    show.legend = FALSE
  ) +
  geom_errorbar(
    data = emmeans_im,
    aes(y = median, ymin = lower.HPD, ymax = upper.HPD),
    position = position_dodge(width = .5),
    width = 0,
    linewidth = 1,
    color = "black",
    show.legend = FALSE
  ) +
  geom_point2(
    data = emmeans_im,
    aes(y = median),
    position = position_dodge(width = .5),
    size = 4,
    shape = 21,
    stroke = 1,
    color = "black"
  ) +
  labs(x = NULL, y = NULL, fill = NULL) +
  scale_y_continuous(
    breaks = breaks_pretty(n = 8)
  ) +
  theme(
    axis.text.y = element_text(size = 10),
    # axis.ticks.y = element_line(linewidth = 0.5),
    panel.grid.major.y = element_line(linewidth = 0.5, color = "grey90"),
    panel.grid.minor.y = element_line(linewidth = 0.5, color = "grey95")
  )

fig_im_zoom
```

```{r}
#| label: fig-implicit-duo
#| fig-width: 18
#| fig-height: 7

fig_im_duo <- (
  fig_im + fig_im_zoom &
    theme(
      legend.position = "top",
      legend.title = element_blank(),
      legend.text = element_text(size = 20),
      legend.margin = margin(0, 150, 25, 0),
      axis.title.y = element_text(size = 20),
      axis.text.x = element_text(size = 18)
    )
  ) +
  plot_layout(
    guides = "collect",
    widths = c(1, 1.2)
  )

fig_im_duo
```

```{r}
#| label: saving-fig-im-duo
#| eval: false

ggsave(
  here("figures/fig-implicit-duo.png"),
  fig_im_duo,
  width = 18,
  height = 7,
  dpi = 300
)
```


# Explicit task

## Summary

```{r}
#| label: summary-ex

summary(fit_explicit)
1 / hypothesis(fit_explicit, "aphantasia1:congruence1 = 0")$hypothesis$Evid.Ratio # BF10 = 2.05
hypothesis(fit_explicit, "aphantasia1:congruence1 > 0") # BF+ = 160
```

## Model diagnostics

```{r}
#| label: fig-ppc-ex
#| fig-width: 10
#| fig-height: 5

custom_pp_check(fit_explicit)
```

## Fixed effects

```{r}
#| label: fig-fixed-ex
#| fig-width: 9
#| fig-height: 5

plot_fixed_effects(fit_explicit)
```

## Varying effects

```{r}
#| label: fig-varying-ex
#| fig-width: 8
#| fig-height: 12
#| eval: false

plot_varying_effects(fit_explicit, df_e_rt)
```

## Estimated means

```{r}
#| label: emmeans-ex

emmeans_ex <- 
  emmeans(fit_explicit, c("aphantasia", "congruence"), epred = TRUE) |> 
  summary(point.est = median) |> 
  as_tibble() |> 
  mutate(across(3:5, ~.*1000)) |>
  rename(median = emmean)

emmeans_ex
```

## Visualisations

```{r}
#| label: fig-ex
#| fig-width: 9
#| fig-height: 6

subj_means_ex <-
  df_e_rt |> 
  group_by(subjectid, aphantasia, congruence) |>
  reframe(rt = median(rt)*1000)

dw <- .4
alpha_subj <- .3
nudge <- .11

fig_ex <-
  subj_means_ex |> 
  ggplot(aes(x = congruence, y = rt, color = aphantasia, fill = aphantasia)) +
  # ggplot(aes(x = aphantasia, y = rt, color = congruence, fill = congruence)) +
  geom_violinhalf(
    trim = TRUE,
    flip = c(1, 2),
    alpha = .5,
    scale = "width",
    position = position_dodge(width = dw),
    show.legend = FALSE
  ) +
  # individual subject lines
  geom_line(
    data = subj_means_ex |> filter(aphantasia == "Aphantasia"),
    aes(group = interaction(subjectid,aphantasia)),
    position = position_nudge(nudge),
    alpha = alpha_subj,
    show.legend = FALSE
  ) +
  geom_line(
    data = subj_means_ex |> filter(aphantasia == "Control"),
    aes(group = interaction(subjectid, aphantasia)),
    position = position_nudge(-nudge),
    alpha = alpha_subj,
    show.legend = FALSE
  ) +
  # individual subject points
  geom_quasirandom(
    color = "white",
    pch = 21,
    width = .05,
    size = 1.8,
    alpha = .6,
    dodge.width = .4,
    show.legend = FALSE
  ) +
  # group median lines
  geom_line(
    data = emmeans_ex,
    aes(y = median, group = aphantasia),
    position = position_dodge(width = dw),
    linewidth = 1,
    show.legend = FALSE
  ) +
  geom_errorbar(
    data = emmeans_ex,
    aes(y = median, ymin = lower.HPD, ymax = upper.HPD),
    position = position_dodge(width = dw),
    width = 0,
    linewidth = 1,
    color = "black",
    show.legend = FALSE
  ) +
  geom_point2(
    data = emmeans_ex,
    aes(y = median),
    position = position_dodge(width = dw),
    size = 4,
    shape = 21,
    stroke = 1,
    color = "black"
  ) +
  labs(x = NULL, fill = NULL) +
  scale_y_continuous(
    name = "Response time (ms)",
    breaks = breaks_pretty()
  ) +
  theme(
    axis.ticks.y = element_line(linewidth = 0.5),
    panel.grid.major.y = element_line(linewidth = 0.5, color = "grey90"),
    panel.grid.minor.y = element_line(linewidth = 0.5, color = "grey95")
  )

fig_ex
```

```{r}
#| label: fig-ex-zoom
#| fig-width: 9
#| fig-height: 5

fig_ex_zoom <-
  subj_means_ex |> 
  ggplot(aes(x = congruence, y = rt, color = aphantasia, fill = aphantasia)) +
  geom_line(
    data = emmeans_ex,
    aes(y = median, group = aphantasia),
    position = position_dodge(width = .5),
    linewidth = 1.5,
    show.legend = FALSE
  ) +
  geom_errorbar(
    data = emmeans_ex,
    aes(y = median, ymin = lower.HPD, ymax = upper.HPD),
    position = position_dodge(width = .5),
    width = 0,
    linewidth = 1,
    color = "black",
    show.legend = FALSE
  ) +
  geom_point2(
    data = emmeans_ex,
    aes(y = median),
    position = position_dodge(width = .5),
    size = 4,
    shape = 21,
    stroke = 1,
    color = "black"
  ) +
  labs(x = NULL, y = NULL, fill = NULL) +
  scale_y_continuous(
    breaks = breaks_pretty(n = 8)
  ) +
  theme(
    axis.text.y = element_text(size = 10),
    # axis.ticks.y = element_line(linewidth = 0.5),
    panel.grid.major.y = element_line(linewidth = 0.5, color = "grey90"),
    panel.grid.minor.y = element_line(linewidth = 0.5, color = "grey95")
  )

fig_ex_zoom
```

```{r}
#| label: fig-explicit-duo
#| fig-width: 18
#| fig-height: 7

fig_ex_duo <- (
  fig_ex + fig_ex_zoom &
    theme(
      legend.position = "top",
      legend.title = element_blank(),
      legend.text = element_text(size = 20),
      legend.margin = margin(0, 150, 25, 0),
      axis.title.y = element_text(size = 20),
      axis.text.x = element_text(size = 18)
    )
  ) +
  plot_layout(
    guides = "collect",
    widths = c(1, 1.2)
  )

fig_ex_duo
```

```{r}
#| label: saving-fig-ex-duo
#| eval: false

ggsave(
  here("figures/fig-explicit-duo.png"),
  fig_ex_duo,
  width = 18,
  height = 7,
  dpi = 300
)
```



:::: {.content-visible when-format="html"}

&nbsp;
&nbsp;
&nbsp;

::: {.callout-note collapse="true"}
# Session information for reproducibility

```{r}
#| label: session-information
#| echo: false

cat("═════════════════════════════════════════════════════════════════════════")
report_system(session = sessionInfo())
cat("Packages used:")
report_packages(session = sessionInfo())
cat("═════════════════════════════════════════════════════════════════════════")
```
:::
::::


