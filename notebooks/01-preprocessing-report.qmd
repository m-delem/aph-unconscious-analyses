---
title: Preprocessing report
subtitle: "Are there unconscious visual images in aphantasia? Development of an implicit priming paradigm"
eval: false
---

```{r}
#| label: setup
#| include: false
#| eval: true

library(here)
source(here("scripts/_setup.R"))
```

:::: {.content-visible when-format="html"}
::: {.callout-note collapse="true"}
# Packages and setup
```r
{{< include ../scripts/_setup.R >}}
```
:::
::::

:::{.content-visible unless-format="html"}
The code for the outlier detection procedure described in the manuscript can be found in the `data-analysis-report.qmd` file.
:::

:::{.content-visible when-format="html"}
Down below is the code for the outlier selection procedure described in the manuscript.
:::

```{r}
#| label: preparing-rt-data
#| code-summary: Preparing the data for the outlier detection procedure

# ═══ Accuracy outliers analysis ═══════════════════════════════════════════════

df_0e <- 
  df_explicit |> 
  mutate(across(c(aphantasia, color, congruence), as.factor))

df_0i <- df_implicit |> 
  mutate(across(c(aphantasia, color, congruence), as.factor))
```

```{r}
#| label: listing-error-rates
#| code-summary: Listing error rates per subject

# ─── Listing error rates per subject ───
list(
  df_0e = df_0e,
  df_0i = df_0i
  ) |>
  imap(
    ~.x |>
      select(subjectid, starts_with("correct"), aphantasia) |>
      group_by(subjectid) |>
      count(pick(2)) |>
      filter(pick(1) == 1) |>
      ungroup() |>
      mutate(
        n_tot = max(n),
        prop = (n_tot - n) / n_tot * 100  # analysing the error rate per subject
      ) %>%
      arrange(desc(prop)) |>
      select(1, 5)
    )
# 5 accuracy outliers in the explicit task, 4 in the implicit one
```

```{r}
#| label: removing-errors
#| code-summary: Removing error trials and irrelevant variables

# ─── Removing incorrect trials and task-wise accuracy outliers ───
df_1e_out <-
  df_0e |> 
  # filtering out...
  filter(
    # participants identified with with high error rates
    !(subjectid %in% c( 
      "subject_7",
      "subject_94", 
      "subject_25", 
      "subject_4",
      "subject_97"))
    ) |>  
  # removing irrelevant variables
  select(-c(sex, vviq80, orientation, response))

df_1i_out <-
  df_0i |> 
  filter(
    !(subjectid %in% c(
      "subject_21",
      "subject_56",
      "subject_9"
    ))
  ) |>  
  # removing irrelevant variables
  select(-c(sex, vviq80, orientation, response))

df_1e <-
  df_1e_out |> 
  # filtering out...
  filter(correct_explicit == 1) |> 
  select(!correct_explicit)

df_1i <-
  df_1i_out |> 
  # filtering out...
  filter(correct_implicit == 1) |> 
  select(!correct_implicit)
```

```{r}
#| label: removing-extreme-trials
#| code-summary: Removing extreme RTs

# ═══ Broad RT outlier trials removal ════════════════════════════════════

df_2e <- 
  df_1e |>  
  # filtering out extreme RTs
  filter(rt > .3 & rt < 3)

df_2i <- 
  df_1i |>  
  # filtering out extreme RTs
  filter(rt > .3 & rt < 3)
```

```{r}
#| label: rt-means-table
#| code-summary: Creating a table with RT means

# ═══ RT means table - Both tasks ══════════════════════════════════════════════

df_rt <- 
  list(df_2e = df_2e, df_2i = df_2i) |> 
  imap(
    ~.x |> 
      select(rt) |> 
      report() |>
      as.data.frame() |>  
      select(1:10)
  )
```

```{r}
#| label: detecting-aberrant-means
#| code-summary: Detecting outliers in the RT means

# ═══ Aberrant RT means outliers removal ═══════════════════════════════════════

# ─── Finding outliers ───
threshold_e <- df_rt$df_2e$Median + 3*df_rt$df_2e$MAD
threshold_i <- df_rt$df_2i$Median + 3*df_rt$df_2i$MAD

df_2e |>
  group_by(subjectid) |>
  summarise(mean_rt = mean(rt)) |>
  ungroup() |>
  filter(mean_rt > threshold_e) |>
  arrange(desc(mean_rt))
# 7 outliers in the explicit task

df_2i |>
  group_by(subjectid) |>
  summarise(mean_rt = mean(rt)) |>
  ungroup() |>
  filter(mean_rt > threshold_i) |>
  arrange(desc(mean_rt))
```

```{r}
#| label: removing-aberrant-means
#| code-summary: Removing outliers in the RT means

# ─── Removing specific outliers ───

df_3e <- 
  df_2e |> 
  filter(
    !(subjectid %in% c(
      "subject_49",
      "subject_59",
      "subject_107",
      "subject_100",
      "subject_73",
      "subject_106",
      "subject_119"
    ))
  )

df_3i <- 
  df_2i |> 
  filter(
    !(subjectid %in% c(
      "subject_49",
      "subject_107",
      "subject_30",
      "subject_120",
      "subject_127"
    ))
  )
```

```{r}
#| label: preparing-correlations-data
#| code-summary: Preparing the data for the correlation analysis

# ─── Preparing tables for correlation ───
congruence_effects_emm <-
  list(
      df_3e = df_3e,
      df_3i = df_3i
      ) |> 
  imap(
    ~.x |> 
      group_by(subjectid, congruence, color) |> 
      reframe(mean_rt = mean(rt)) |> 
      group_by(subjectid, congruence) |> 
      reframe(mean = mean(mean_rt)) |> 
      pivot_wider(
        names_from = congruence,
        values_from = mean
      ) |> 
      mutate(congruence_effect = uncongruent - congruent, .keep = "unused") |> 
      left_join(df_questionnaires[,c(1,5:8)], by = "subjectid") |> 
      ungroup()
    )
```

```{r}
#| label: filtering-extreme-groups
#| code-summary: Creating extreme groups

df_3ex <-
  df_3e |> 
  left_join(df_questionnaires[c(1,5)], by = "subjectid") |> 
  filter(vviq80 == 16 | vviq80 >= 46)

df_3ix <-
  df_3i |>
  left_join(df_questionnaires[c(1,5)], by = "subjectid") |> 
  filter(vviq80 == 16 | vviq80 >= 42)

df_3ix |> 
  group_by(subjectid, aphantasia) |> 
  count() |> 
  group_by(aphantasia) |> 
  count()
```



:::: {.content-visible when-format="html"}

&nbsp;
&nbsp;
&nbsp;

::: {.callout-note collapse="true"}
# Session information for reproducibility

```{r}
#| label: session-information
#| echo: false
#| eval: true

cat("═════════════════════════════════════════════════════════════════════════")
report_system(session = sessionInfo())
cat("Packages used:")
report_packages(session = sessionInfo())
cat("═════════════════════════════════════════════════════════════════════════")
```
:::
::::


